<!DOCTYPE html>
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-param" content="_csrf">
    <meta name="csrf-token" content="WENKQk9vWG8pGnp2F18pFy8sBHEgChBZCXUGAxs2Dlo3JQ81BT8XGQ==">
<title>AWS Go SDK</title>
    <link href="http://dev.univrs.io/bootstrap.css" rel="stylesheet">
    <link href="http://dev.univrs.io/univrs.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=PT+Serif" rel="stylesheet">
 <style>
* {font-family: 'PT Serif', serif;}
.home-background {
    position: relative;
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: center 120px;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    z-index: 1;
}
nav {
    box-shadow: 0 0 5px rgba(0,0,0,.2);
    background-color: white;
}
</style> 
 </head>
<body>
    
     <div class="wrap">
        <nav id="w0" class="navbar navbar-fixed-top" role="navigation">
        <div class="container"><div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#w0-collapse">
        <span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span></button>
<a class="navbar-brand" href="/">
<strong>Home</strong></a></div>
<div id="w0-collapse" class="collapse navbar-collapse">
<ul id="w1" class="navbar-nav navbar-right nav">
<li><a href="/">Home</a></li>
<li><a href="/about">About</a></li>
<li><a href="/intro">Overview</a></li>
</ul></div></div></nav>
        <div class="container">
            <ul class="breadcrumb">
            <li><a href="/">Home</a></li>
                <li><a href="/about">About</a></li>
                <li><a href="/intro">Overview</a></li>
                <li><a href="/docker">Docker</a></li>
                <li><a href="/ecs">ECS</a></li>
                 <li><a href="/fargate">Fargate</a></li>
                <li><a href="/aws">Lambda</a></li>
                <li><a href="/s3">S3</a></li>
                <li><a href="/ml">ML</a></li>
                <li class="active">Go SDK</a></li>
                <li><a href="cf">CloudFormation</a></li>
                <li><a href="/ssm">SSM</a></li>
                <li><a href="/cert">Cert</a></li>
                <li><a href="/help">Help</a></li>
            </ul>            <!-- div class="home-background" style="background-image: url(&quot;img/univrs.JPG&quot;);" -->
            <div class="site-about">
    <!-- h1><? // Html::encode($this->title) ?></h1 -->
   <div class="jumbotron">
        <h1><a href="https://github.com/ardeshir/gosdk">AWS Golang SDK</a></h1>
        <!-- p><a class="btn btn-lg btn-default" href="http://univrs.io:8888"></a></p -->
       <!-- p><a class="btn btn-default" href="http://www.tensorflow.org">Getting Started in TensorFlow</a></p -->
       <h4>Fundamentals of the AWS SDK for Golang</h4>
    </div>

    <div class="body-content">

        <!-- div class="row">
            <div class="col-lg-4">
              <h2><a class="btn btn-default" href="https://www.tensorflow.org/">documentation</a></h2>
                <p>Basic <a href="https://www.tensorflow.org/">TensorFlow</a>.</p>
            </div>
            <div class="col-lg-4">
              <h2><a class="btn btn-default" href="http://dev.univrs.io/index.html">Content with WebRTC Real-Time: Application</a></h2>
                <p>Web Real-Time Communications to communicate, collaborate, and create AI. (requires webrtc browser support)</p>
            </div>
            <div class="col-lg-4">
                <h2><a class="btn btn-default" href="http://en.wikipedia.org/wiki/Application_programming_interface">API &amp; extentions</a></h2>
                <p>In commputer programming, an application programming interface (API) is a set of routines, protocals, and 
                    tools for building software applications.</p>
            </div>
        </div -->
        
<!-- start new -->  
<h3>In order to use the power of the AWS Go SDK, we have to understand two concepts: <br/>Sessions and Service Clients</h3>
<br/><br/>
<h4>Sessions</h4>
<p>
The first is the idea of a session. A session is an object from the SDK that manages configuration we use with 
other objects to communicate with AWS Services. The session objects can be shared by different aspects of your application code.
The session object should be cached and reused. Creating a new session object involves loading the configuration information. Reusing the session 
data saves resources. Session objects are safe to use concurrently if you don't modify them. 
</p>
<p>How to create a default session object:</p>
<pre>
session, err := session.NewSession() 
</pre>
<p>
The information stored in the "session" variable will store default configuration. To overwrite a configuration, pass
a pointer to an object of the &aws.Config struct as an argument to NewSession(). 
</p>
<pre>
session, err := session.NewSession(&aws.Config{
    Region: aws.String("us-east-1"),
})
</pre>
<p>
A second constructor that lets you overwrite session options is  NewSessionWithOptions(). 
</p>
<pre>
session, err := session.NewSessionWithOptions( session.Options{
  Profile: "s3-fullAccess",
})

</pre>
<br/><br/>

<h4>Service Clients</h4>
<p>A service client is an object that provides API access to specific AWS Services such as EC2, S3 or SQS.</p>
<h5><a href="https://github.com/ardeshir/gosdk">Clone Project on github.com/ardeshir/gosdk</a></h5>
<pre>

package main

import(
    "fmt"
    "log"
    "os"
    u "github.com/ardeshir/version"

    "github.com/aws/aws-sdk-go/aws"
    "github.com/aws/aws-sdk-go/service/s3"
    "github.com/aws/aws-sdk-go/aws/session"
)


var ( 
 debug bool = false
 version string = "0.0.0"
 )


func main() {

sess, err := session.NewSession( &aws.Config{
	Region: aws.String("us-east-1"),
})

if err != nil  {
	log.Fatal(err)
}

s3Svc := s3.New(sess)
results, err := s3Svc.ListBuckets(nil)
if err != nil {
	log.Fatal("Unable to get bucket list")
}

fmt.Println("Buckets: ")
for _, b := range results.Buckets {
	fmt.Printf("Bucket: %s \n", aws.StringValue(b.Name))
}

  if debugTrue() {
    u.V(version)
  }

}

// Function to check env variable DEFAULT_DEBUG bool
func debugTrue() bool {
    
     if os.Getenv("DEFAULT_DEBUG") != "" {
        return true
     }  
     return false 
}

</pre>
<!-- end new -->    

<div class="vertical-center">
  
	<div class="container well"><a href="/about">Next &gt;&gt;</a>
       <!-- b>Join the discussion:</b><br/>
	<ul id="messages" class="list-unstyled">
	
	</ul>
	<hr/>

	<form role="form" id="chat_form" onsubmit="sendMessage(); return false;">
		<div class="form-group">
		<input class="form-control" type="text" id="message" name="message"
		placeholder="Type your text here" value="" autofocus/>
		</div>
	<button type="button" id="send" class="btn btn-primary" onclick="sendMessage();">Send Message</button><button type="button" id="clear" class="btn btn-default" onclick="clearMessages(); return false;">Clear</button>
	</form -->
	</div><!-- end of vertial -->
	</div><!-- end container -->
</div>
           <!-- /div -->
        </div>
    </div>
    <footer class="footer">
        <div class="container">
            <p class="pull-left">&copy; univrs.io 2019</p>
            <p class="pull-right"><a href="https://github.com/ardeshir/">powered by open source</a></p>
        </div>
    </footer>

<script src="http://dev.univrs.io/jquery.js"></script>
<script src="http://dev.univrs.io/bootstrap.js"></script>
</body>
</html>
